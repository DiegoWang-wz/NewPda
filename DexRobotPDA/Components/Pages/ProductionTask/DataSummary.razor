@page "/DataSummary"
@using DocumentFormat.OpenXml.Wordprocessing
@using Color = MudBlazor.Color
@using ClosedXML.Excel;
@using System.Text;
@inject IServiceProvider ServiceProvider
@inject IJSRuntime JS
<MudPaper Elevation="3" Class="pa-4 ma-2 mx-md-8">

    <MudFadeTransition Visible="@hasSearched">
        <div class="min-vh-40 d-flex flex-column justify-center">

            @if (!hasSearched)
            {
                <MudText Typo="Typo.body1" Color="Color.Secondary" Class="text-center mt-8">
                    请输入生产单号并点击查询，加载任务详情
                </MudText>
            }
            else if (isLoading)
            {
                <div class="d-flex justify-content-center align-items-center">
                    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7"/>
                </div>
            }
            else if (fullTaskData == null || !fullTaskData.Any())
            {
                <div class="d-flex justify-content-center align-items-center text-center my-10">
                    <MudIcon Icon="@Icons.Material.Filled.WarningAmber" Color="Color.Error" Size="Size.Large"
                             Class="mr-3"/>
                    <MudText Typo="Typo.body1" Color="Color.Error">
                        无法加载任务数据，请检查生产单号是否正确
                    </MudText>
                </div>
            }
            else
            {
                <MudPaper Elevation="2" Class="mb-4 px-4 py-3 d-flex align-center justify-between flex-wrap">

                    <!-- 左侧：任务详情文字 -->
                    <div class="d-flex flex-wrap align-center gap-4">
                        <div class="d-flex align-center">
                            <MudIcon Icon="@Icons.Material.Filled.TaskAlt" Color="Color.Primary" Size="Size.Medium"
                                     Class="mr-1"/>
                            <MudText Typo="Typo.h6" Color="Color.Primary" Class="mr-2">任务详情</MudText>
                        </div>

                        <MudText Typo="Typo.body1" Class="mx-2">
                            <b>任务单号：</b>@(fullTaskData?.FirstOrDefault()?.task?.task_id ?? "—")
                        </MudText>

                        <MudText Typo="Typo.body1" Class="mx-2">
                            <b>产品数量：</b>@(fullTaskData?.FirstOrDefault()?.task?.product_num ?? 0)
                        </MudText>

                        <MudText Typo="Typo.body1" Class="mx-2">
                            <b>创建时间：</b>@(fullTaskData?.FirstOrDefault()?.task?.created_at.ToString("yyyy-MM-dd HH:mm") ?? "—")
                        </MudText>
                    </div>

                    <MudSpacer/>
                    <MudButton Variant="Variant.Filled"
                               Color="Color.Primary"
                               StartIcon="@Icons.Material.Filled.FileDownload"
                               OnClick="ExportExcel"
                               Size="Size.Medium">
                        导出 Excel
                    </MudButton>
                </MudPaper>


                @foreach (var palmData in fullTaskData)
                {
                    var palmTitle = $"手掌信息：{palmData.palm?.palm_id ?? "未知"}";

                    <MudExpansionPanels Elevation="2" Class="mb-5">
                        <MudExpansionPanel Text="@palmTitle"
                                           ExpandIcon="@Icons.Material.Filled.ExpandMore"
                                           CollapseIcon="@Icons.Material.Filled.ExpandLess">
                            <div class="pl-2">

                                <!-- Palm 检测部分可折叠 -->
                                <MudExpansionPanels Elevation="1" Class="my-3">
                                    <MudExpansionPanel Text="整手标定检测"
                                                       ExpandIcon="@Icons.Material.Filled.KeyboardArrowDown"
                                                       CollapseIcon="@Icons.Material.Filled.KeyboardArrowUp">
                                        <MudTable Items="palmData.detects" Dense="true" Hover="true" Bordered="true">
                                            <HeaderContent>
                                                <MudTh Style="@MinColWidthStyle">
                                                    <MudTableSortLabel SortBy="(PalmCalibrateDetectDto x) => x.id">
                                                        检测ID
                                                    </MudTableSortLabel>
                                                </MudTh>
                                                <MudTh Style="@MinColWidthStyle">
                                                    <MudTableSortLabel SortBy="(PalmCalibrateDetectDto x) => x.palm_id">
                                                        手掌外壳ID
                                                    </MudTableSortLabel>
                                                </MudTh>
                                                <MudTh Style="@MinColWidthStyle">
                                                    <MudTableSortLabel
                                                        SortBy="(PalmCalibrateDetectDto x) => x.proximity_sensing">
                                                        接近觉
                                                    </MudTableSortLabel>
                                                </MudTh>
                                                <MudTh Style="@MinColWidthStyle">
                                                    <MudTableSortLabel
                                                        SortBy="(PalmCalibrateDetectDto x) => x.normal_force">法向力
                                                    </MudTableSortLabel>
                                                </MudTh>
                                                <MudTh Style="@MinColWidthStyle">
                                                    <MudTableSortLabel
                                                        SortBy="(PalmCalibrateDetectDto x) => x.fan_function">
                                                        风扇功能
                                                    </MudTableSortLabel>
                                                </MudTh>
                                                <MudTh Style="@MinColWidthStyle">
                                                    <MudTableSortLabel
                                                        SortBy="(PalmCalibrateDetectDto x) => x.software_version">
                                                        软件版本号
                                                    </MudTableSortLabel>
                                                </MudTh>
                                                <MudTh Style="@MinColWidthStyle">
                                                    <MudTableSortLabel
                                                        SortBy="(PalmCalibrateDetectDto x) => x.electricity">电流
                                                    </MudTableSortLabel>
                                                </MudTh>
                                                <MudTh Style="@MinColWidthStyle">
                                                    <MudTableSortLabel
                                                        SortBy="(PalmCalibrateDetectDto x) => x.inspector">检测人员
                                                    </MudTableSortLabel>
                                                </MudTh>

                                                <MudTh Style="@MinColWidthStyle">
                                                    <MudTableSortLabel SortBy="(PalmCalibrateDetectDto x) => x.remarks">
                                                        备注
                                                    </MudTableSortLabel>
                                                </MudTh>
                                                <MudTh Style="@MinColWidthStyle">
                                                    <MudTableSortLabel
                                                        SortBy="(PalmCalibrateDetectDto x) => x.if_qualified">
                                                        是否合格
                                                    </MudTableSortLabel>
                                                </MudTh>
                                            </HeaderContent>
                                            <RowTemplate>
                                                <MudTd Style="@MinColWidthStyle"
                                                       DataLabel="检测ID">@context.id</MudTd>
                                                <MudTd Style="@MinColWidthStyle"
                                                       DataLabel="手掌外壳ID">@context.palm_id</MudTd>
                                                <MudTd Style="@MinColWidthStyle"
                                                       DataLabel="接近觉">@context.proximity_sensing</MudTd>
                                                <MudTd Style="@MinColWidthStyle"
                                                       DataLabel="法向力">@context.normal_force</MudTd>
                                                <MudTd Style="@MinColWidthStyle"
                                                       DataLabel="风扇功能">@context.fan_function</MudTd>
                                                <MudTd Style="@MinColWidthStyle"
                                                       DataLabel="软件版本号">@context.software_version</MudTd>
                                                <MudTd Style="@MinColWidthStyle"
                                                       DataLabel="电流">@context.electricity</MudTd>
                                                <MudTd Style="@MinColWidthStyle"
                                                       DataLabel="操作员ID">@context.inspector</MudTd>
                                                <MudTd Style="@MinColWidthStyle"
                                                       DataLabel="备注">@context.remarks</MudTd>
                                                <MudTd>
                                                    @if (context.if_qualified == true)
                                                    {
                                                        <span>✅ 合格</span>
                                                    }
                                                    else if (context.if_qualified == false)
                                                    {
                                                        <span>❌ 不合格</span>
                                                    }
                                                    else
                                                    {
                                                        <span>未知</span>
                                                    }
                                                </MudTd>
                                            </RowTemplate>
                                        </MudTable>
                                    </MudExpansionPanel>
                                </MudExpansionPanels>

                                <!-- 手指部分 -->
                                @foreach (var fingerData in palmData.fingers)
                                {
                                    string fingerTypeText = fingerData.finger?.type switch
                                    {
                                        2 => "分指",
                                        1 => "拇指",
                                        0 => "单指",
                                        _ => "未知类型"
                                    };
                                    var fingerTitle = $"{fingerTypeText}编号：{fingerData.finger?.finger_id ?? "未知"}";

                                    <MudExpansionPanels Elevation="1" Class="mt-4">
                                        <MudExpansionPanel Text="@fingerTitle"
                                                           ExpandIcon="@Icons.Material.Filled.KeyboardArrowDown"
                                                           CollapseIcon="@Icons.Material.Filled.KeyboardArrowUp">
                                            <div class="pl-2">
                                                @if (fingerData.finger?.type == 2)
                                                {
                                                    <MudText Typo="Typo.subtitle1" Class="mb-2">分指标定检测
                                                    </MudText>
                                                    <MudTable Items="fingerData.detect3" Dense="true" Hover="true"
                                                              Bordered="true">
                                                        <HeaderContent>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                <MudTableSortLabel
                                                                    SortBy="(SplitCalibrateDetectDto x) => x.id">
                                                                    检测ID
                                                                </MudTableSortLabel>
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                <MudTableSortLabel
                                                                    SortBy="(SplitCalibrateDetectDto x) => x.finger_id">
                                                                    手指外壳ID
                                                                </MudTableSortLabel>
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                <MudTableSortLabel
                                                                    SortBy="(SplitCalibrateDetectDto x) => x.electricity">
                                                                    电流记录
                                                                </MudTableSortLabel>
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                <MudTableSortLabel
                                                                    SortBy="(SplitCalibrateDetectDto x) => x.test_action">
                                                                    测试动作
                                                                </MudTableSortLabel>
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                <MudTableSortLabel
                                                                    SortBy="(SplitCalibrateDetectDto x) => x.begin_time">
                                                                    动作发起时间
                                                                </MudTableSortLabel>
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                <MudTableSortLabel
                                                                    SortBy="(SplitCalibrateDetectDto x) => x.finish_time">
                                                                    动作结束时间
                                                                </MudTableSortLabel>
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                <MudTableSortLabel
                                                                    SortBy="(SplitCalibrateDetectDto x) => x.consume_time">
                                                                    耗时（秒）
                                                                </MudTableSortLabel>
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                <MudTableSortLabel
                                                                    SortBy="(SplitCalibrateDetectDto x) => x.near_angle">
                                                                    近端关节角度
                                                                </MudTableSortLabel>
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                <MudTableSortLabel
                                                                    SortBy="(SplitCalibrateDetectDto x) => x.remote_angle">
                                                                    远端关节角度
                                                                </MudTableSortLabel>
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                <MudTableSortLabel
                                                                    SortBy="(SplitCalibrateDetectDto x) => x.motor_1_max">
                                                                    电机1电流峰值
                                                                </MudTableSortLabel>
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                <MudTableSortLabel
                                                                    SortBy="(SplitCalibrateDetectDto x) => x.motor_2_max">
                                                                    电机2电流峰值
                                                                </MudTableSortLabel>
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                <MudTableSortLabel
                                                                    SortBy="(SplitCalibrateDetectDto x) => x.inspector">
                                                                    检测人员
                                                                </MudTableSortLabel>
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                <MudTableSortLabel
                                                                    SortBy="(SplitCalibrateDetectDto x) => x.calibrate_time">
                                                                    标记日期
                                                                </MudTableSortLabel>
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                <MudTableSortLabel
                                                                    SortBy="(SplitCalibrateDetectDto x) => x.remarks">备注
                                                                </MudTableSortLabel>
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                <MudTableSortLabel
                                                                    SortBy="(SplitCalibrateDetectDto x) => x.if_qualified">
                                                                    是否合格
                                                                </MudTableSortLabel>
                                                            </MudTh>
                                                        </HeaderContent>
                                                        <RowTemplate>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="检测ID">@context.id</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="分指机构外壳ID">@context.finger_id</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="电流记录">@context.electricity</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="测试动作">@context.test_action</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="动作发起时间">@context.begin_time?.ToString("yyyy-MM-dd HH:mm")</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="动作结束时间">@context.finish_time?.ToString("yyyy-MM-dd HH:mm")</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="耗时（秒）">@context.consume_time</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="近端关节角度">@context.near_angle</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="远端关节角度">@context.remote_angle</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="电机1电流峰值">@context.motor_1_max</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="电机2电流峰值">@context.motor_2_max</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="检测人员">@context.inspector</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="标记日期">@context.calibrate_time?.ToString("yyyy-MM-dd HH:mm")</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="备注">@context.remarks</MudTd>
                                                            <MudTd>
                                                                @if (context.if_qualified == true)
                                                                {
                                                                    <span>✅ 合格</span>
                                                                }
                                                                else if (context.if_qualified == false)
                                                                {
                                                                    <span>❌ 不合格</span>
                                                                }
                                                                else
                                                                {
                                                                    <span>未知</span>
                                                                }
                                                            </MudTd>
                                                        </RowTemplate>
                                                    </MudTable>

                                                    <MudText Typo="Typo.subtitle1" Class="mt-3 mb-2">
                                                        分指蜗杆粘接检测
                                                    </MudText>
                                                    <MudTable Items="fingerData.detect2" Dense="true" Hover="true"
                                                              Bordered="true">
                                                        <HeaderContent>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                <MudTableSortLabel
                                                                    SortBy="(SplitWormDetectDto x) => x.id">
                                                                    检测ID
                                                                </MudTableSortLabel>
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                <MudTableSortLabel
                                                                    SortBy="(SplitWormDetectDto x) => x.finger_id">
                                                                    分指ID
                                                                </MudTableSortLabel>
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                <MudTableSortLabel
                                                                    SortBy="(SplitWormDetectDto x) => x.combine_time">
                                                                    粘接时间
                                                                </MudTableSortLabel>
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                <MudTableSortLabel
                                                                    SortBy="(SplitWormDetectDto x) => x.using_time">使用时间
                                                                </MudTableSortLabel>
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                <MudTableSortLabel
                                                                    SortBy="(SplitWormDetectDto x) => x.inspector">检测员
                                                                </MudTableSortLabel>
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                <MudTableSortLabel
                                                                    SortBy="(SplitWormDetectDto x) => x.if_qualified">
                                                                    是否合格
                                                                </MudTableSortLabel>
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                <MudTableSortLabel
                                                                    SortBy="(SplitWormDetectDto x) => x.remarks">备注
                                                                </MudTableSortLabel>
                                                            </MudTh>
                                                        </HeaderContent>
                                                        <RowTemplate>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="序号">@context.id</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="分指ID">@context.finger_id</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="粘合时间">@context.combine_time?.ToString("yyyy-MM-dd HH:mm")</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="使用时间">@context.using_time?.ToString("yyyy-MM-dd HH:mm")</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="检测人员">@context.inspector</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="备注">@context.remarks</MudTd>
                                                            <MudTd>
                                                                @if (context.if_qualified)
                                                                {
                                                                    <span>✅ 合格</span>
                                                                }
                                                                else
                                                                {
                                                                    <span>❌ 不合格</span>
                                                                }
                                                            </MudTd>

                                                        </RowTemplate>
                                                    </MudTable>
                                                }
                                                else
                                                {
                                                    <MudText Typo="Typo.subtitle1" Class="mt-2 mb-2">单指标定检测
                                                    </MudText>
                                                    <MudTable Items="fingerData.detect4" Dense="true" Hover="true"
                                                              Bordered="true">
                                                        <HeaderContent>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                检测ID
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                电机使用时间
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                手指使用时间
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                安装时间判定
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                电流记录
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                测试动作
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                动作发起时间
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                动作结束时间
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                耗时（秒）
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                近端关节角度
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                远端关节角度
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                电机1电流峰值
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                电机2电流峰值
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                标记日期
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                接近觉
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                法向力
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                是否合格
                                                            </MudTh>
                                                            <MudTh Style="@MinColWidthStyle">
                                                                备注
                                                            </MudTh>
                                                        </HeaderContent>
                                                        <RowTemplate>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="序号">@context.id</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="电机使用时间">@context.motor_using_time?.ToString("yyyy-MM-dd HH:mm")</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="手指使用时间">@context.finger_using_time?.ToString("yyyy-MM-dd HH:mm")</MudTd>
                                                            <MudTd Style="@MinColWidthStyle" DataLabel="安装时间判定">
                                                                <MudChip T="bool?"
                                                                         Color="@(context.if_time_qualified.GetValueOrDefault() ? Color.Success : Color.Error)">
                                                                    @(context.if_time_qualified.HasValue ? (context.if_time_qualified.Value ? "是" : "否") : "未知")
                                                                </MudChip>
                                                            </MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="电流记录">@context.electricity</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="测试动作">@context.test_action</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="动作发起时间">@context.begin_time?.ToString("yyyy-MM-dd HH:mm")</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="动作结束时间">@context.finish_time?.ToString("yyyy-MM-dd HH:mm")</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="耗时（秒）">@context.consume_time</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="近端关节角度">@context.near_angle</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="远端关节角度">@context.remote_angle</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="电机1电流峰值">@context.motor_1_max</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="电机2电流峰值">@context.motor_2_max</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="标记日期">@context.calibrate_time?.ToString("yyyy-MM-dd HH:mm")</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="接近觉">@context.proximity_sensing</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="法向力">@context.normal_force</MudTd>
                                                            <MudTd Style="@MinColWidthStyle"
                                                                   DataLabel="备注">@context.remarks</MudTd>
                                                            <MudTd>
                                                                @if (context.if_qualified == true)
                                                                {
                                                                    <span>✅ 合格</span>
                                                                }
                                                                else if (context.if_qualified == false)
                                                                {
                                                                    <span>❌ 不合格</span>
                                                                }
                                                                else
                                                                {
                                                                    <span>未知</span>
                                                                }
                                                            </MudTd>
                                                        </RowTemplate>
                                                    </MudTable>
                                                }

                                                <MudDivider Class="my-3"/>
                                                <MudText Typo="Typo.subtitle1" Class="mb-2">电机数据</MudText>

                                                @foreach (var motorData in fingerData.motors)
                                                {
                                                    <MudCard Elevation="0" Class="ml-2 mb-3 pa-3" Outlined="true">
                                                        <MudText Typo="Typo.subtitle2" Color="Color.Primary"
                                                                 Class="mb-2">
                                                            电机: @motorData.motor?.motor_id
                                                        </MudText>

                                                        <MudTable Items="@(new[] { motorData.motor })" Dense="true"
                                                                  Hover="true" Bordered="true">
                                                            <HeaderContent>
                                                                <MudTh>电机ID</MudTh>
                                                                <MudTh>任务号</MudTh>
                                                                <MudTh>粘接时间</MudTh>
                                                                <MudTh>绑定时间</MudTh>
                                                                <MudTh>操作员</MudTh>
                                                                <MudTh>备注</MudTh>
                                                                <MudTh>是否合格</MudTh>
                                                            </HeaderContent>
                                                            <RowTemplate>
                                                                <MudTd>@context.motor_id</MudTd>
                                                                <MudTd>@context.task_id</MudTd>
                                                                <MudTd>@context.created_at.ToString("yyyy-MM-dd HH:mm:ss")</MudTd>
                                                                <MudTd>@context.updated_at?.ToString("yyyy-MM-dd HH:mm:ss")</MudTd>
                                                                <MudTd>@context.operator_id</MudTd>
                                                                <MudTd>@context.remarks</MudTd>
                                                                <MudTd>@(context.is_qualified ? "✅ 合格" : "❌ 不合格")</MudTd>
                                                            </RowTemplate>
                                                        </MudTable>

                                                        <MudText Typo="Typo.subtitle2" Class="mt-3 mb-2">蜗杆粘接检测
                                                        </MudText>
                                                        <MudTable Items="motorData.detects" Dense="true" Hover="true"
                                                                  Bordered="true">
                                                            <HeaderContent>
                                                                <MudTh>编号</MudTh>
                                                                <MudTh>作用力</MudTh>
                                                                <MudTh>检测前距离</MudTh>
                                                                <MudTh>检测后距离</MudTh>
                                                                <MudTh>距离差</MudTh>
                                                                <MudTh>粘结时间</MudTh>
                                                                <MudTh>使用时间</MudTh>
                                                                <MudTh>检测员</MudTh>
                                                                <MudTh>备注</MudTh>
                                                                <MudTh>是否合格</MudTh>
                                                            </HeaderContent>
                                                            <RowTemplate>
                                                                <MudTd DataLabel="编号">@context.id</MudTd>
                                                                <MudTd DataLabel="作用力">@context.force</MudTd>
                                                                <MudTd
                                                                    DataLabel="检测前距离">@context.distance_before</MudTd>
                                                                <MudTd
                                                                    DataLabel="检测后距离">@context.distance_after</MudTd>
                                                                <MudTd
                                                                    DataLabel="距离差">@context.distance_result</MudTd>
                                                                <MudTd
                                                                    DataLabel="创建时间">@context.combine_time?.ToString("yyyy-MM-dd HH:mm")</MudTd>
                                                                <MudTd
                                                                    DataLabel="更新时间">@context.using_time?.ToString("yyyy-MM-dd HH:mm")</MudTd>
                                                                <MudTd
                                                                    DataLabel="操作员ID">@context.inspector_id</MudTd>
                                                                <MudTd DataLabel="备注">@context.remarks</MudTd>
                                                                <MudTd>
                                                                    @if (context.if_qualified)
                                                                    {
                                                                        <span>✅ 合格</span>
                                                                    }
                                                                    else
                                                                    {
                                                                        <span>❌ 不合格</span>
                                                                    }
                                                                </MudTd>
                                                            </RowTemplate>
                                                        </MudTable>
                                                    </MudCard>
                                                }
                                            </div>
                                        </MudExpansionPanel>
                                    </MudExpansionPanels>
                                }
                            </div>
                        </MudExpansionPanel>
                    </MudExpansionPanels>
                }
            }
        </div>
    </MudFadeTransition>

    <MudDivider Class="my-6"/>

    <MudStack Row="true" Spacing="4" Class="d-flex align-center py-2">
        <MudTextField
            @bind-Value="taskId"
            Label="生产单号"
            Variant="Variant.Outlined"
            Required="true"
            Clearable="true"
            Error="@hasInputError"
            ErrorText="请输入生产单号"
            AutoFocus="true"
            Id="taskId"
            Class="flex-1"/>

        <MudButton
            Variant="Variant.Filled"
            Color="Color.Error"
            StartIcon="@Icons.Material.Filled.DeleteForever"
            OnClick="ClearTaskId"
            Size="Size.Large"
            Class="w-full md:w-auto">
            清除
        </MudButton>
        <MudButton
            Variant="Variant.Filled"
            Color="Color.Primary"
            StartIcon="@Icons.Material.Filled.Search"
            OnClick="LoadTaskDetail"
            Size="Size.Large"
            Disabled="isLoading"
            Class="w-full md:w-auto">
            @(isLoading ? "查询中..." : "查询")
        </MudButton>
    </MudStack>

</MudPaper>

@code {
    private string TableBodyMaxHeight => "600px";
    private const int MinColWidthPx = 140;
    private string MinColWidthStyle => $"min-width:{MinColWidthPx}px;";

    private string taskId = string.Empty;
    private bool hasInputError = false;
    private bool isLoading = false;
    private bool hasSearched = false;
    private List<FullTaskDataDto> fullTaskData = new();

    private async Task LoadTaskDetail()
    {
        if (string.IsNullOrWhiteSpace(taskId))
        {
            hasInputError = true;
            StateHasChanged();
            return;
        }

        hasInputError = false;
        isLoading = true;
        hasSearched = true;
        StateHasChanged();

        try
        {
            var resp = await TaskService.GetFullTaskData(taskId.Trim());
            fullTaskData = resp ?? new List<FullTaskDataDto>();
        }
        catch
        {
            fullTaskData = new List<FullTaskDataDto>();
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private void ClearTaskId()
    {
        taskId = string.Empty;
        hasSearched = false;
        hasInputError = false;
        fullTaskData.Clear();
        StateHasChanged();
    }
    
    // ================== 常量 ==================
    private class ExportConstants
    {
        public const string EmptyValue = "—";
        public const string DateFormat = "yyyy-MM-dd HH:mm";
        public const string Qualified = "✅ 合格";
        public const string Unqualified = "❌ 不合格";
    }

    // ================== 导出入口（ClosedXML） ==================
    private async Task ExportExcel()
    {
        if (fullTaskData == null || !fullTaskData.Any())
        {
            await JS.InvokeVoidAsync("alert", "没有可导出的数据");
            return;
        }

        try
        {
            await JS.InvokeVoidAsync("excel.showLoading", "正在生成Excel文件...");

            // 异步拼装数据
            var (rows, merges, styles) = await Task.Run(() => BuildExcelData());

            // 用 ClosedXML 生成字节
            var bytes = await Task.Run(() => BuildXlsxBytes(rows, merges, styles));
            var b64 = Convert.ToBase64String(bytes);

            var fileName = $"{fullTaskData.FirstOrDefault()?.task?.task_id ?? "任务报告"}.xlsx";
            await JS.InvokeVoidAsync("excel.saveBase64", fileName, b64);
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("alert", $"导出失败: {ex.Message}");
        }
        finally
        {
            await JS.InvokeVoidAsync("excel.hideLoading");
        }
    }

    // ================== 组装数据（含 merges + styles） ==================
    private (List<List<object>> rows, List<object> merges, List<object> styles) BuildExcelData()
    {
        var rows = new List<List<object>>();
        var merges = new List<object>(); // [{ s:{r,c}, e:{r,c} }]
        var styles = new List<object>(); // [{ rs,re,cs,ce,h,v,wrap,bold,bg,border }]

        BuildTaskDetails(rows, styles);
        BuildPalmFingerMotorRelations(rows, merges, styles);
        BuildDetectionResults(rows, styles);

        return (rows, merges, styles);
    }


    private void AddStyle(List<object> styles, int rs, int re, int cs, int ce,
        string h = "left", string v = "middle", bool wrap = true, bool? bold = null,
        string? bg = null, string? border = null)
    {
        styles.Add(new
        {
            rs, re, cs, ce,
            h, v, wrap, bold, bg, border
        });
    }

    // ================== 区块：任务详情 ==================
    private void BuildTaskDetails(List<List<object>> rows, List<object> styles)
    {
        var task = fullTaskData.FirstOrDefault()?.task;

        rows.Add(new() { "任务详情" });
        // 标题：整行稍后会合并；此处标记左上主单元格的对齐/加粗
        AddStyle(styles, rows.Count - 1, rows.Count - 1, 0, 0,
            h: "center", v: "middle", wrap: true, bold: true, bg: "#DDEBF7");

        rows.Add(new() { "任务号", "任务名称", "产品数量", "操作员", "创建时间" });
        // 表头样式（整行居中加粗、浅绿底）
        AddStyle(styles, rows.Count - 1, rows.Count - 1, 0, 4,
            h: "center", v: "middle", wrap: true, bold: true, bg: "#E2EFDA");

        rows.Add(new()
        {
            task?.task_id ?? ExportConstants.EmptyValue,
            task?.title ?? ExportConstants.EmptyValue,
            task?.product_num.ToString() ?? ExportConstants.EmptyValue,
            task?.assignee_id ?? ExportConstants.EmptyValue,
            task?.created_at.ToString(ExportConstants.DateFormat)
        });

        rows.Add(new());
        rows.Add(new());
    }

    // ================== 区块：手掌-手指-电机 对应关系 ==================
    private void BuildPalmFingerMotorRelations(List<List<object>> rows, List<object> merges, List<object> styles)
    {
        rows.Add(new() { "手掌-手指-电机 对应关系" });
        AddStyle(styles, rows.Count - 1, rows.Count - 1, 0, 0,
            h: "center", v: "middle", wrap: true, bold: true, bg: "#DDEBF7");

        rows.Add(new() { "手掌编号", "手掌组装时间", "手指编号", "手指类型", "手指组装时间", "电机编号", "操作员", "粘接时间", "是否合格" });
        AddStyle(styles, rows.Count - 1, rows.Count - 1, 0, 8,
            h: "center", v: "middle", wrap: true, bold: true, bg: "#E2EFDA");

        foreach (var palm in fullTaskData)
        {
            int palmRowStart = rows.Count;

            var orderedFingers = palm.fingers?
                .OrderBy(f => f.finger?.finger_id)
                .ThenBy(f => f.finger?.type)
                .ToList() ?? new();

            foreach (var finger in orderedFingers)
            {
                int fingerRowStart = rows.Count;

                var orderedMotors = finger.motors?
                    .OrderBy(m => m.motor?.motor_id)
                    .ToList() ?? new();

                if (orderedMotors.Count == 0)
                {
                    rows.Add(new()
                    {
                        palm.palm?.palm_id ?? ExportConstants.EmptyValue,
                        finger.finger?.updated_at.HasValue == true
                            ? finger.finger.updated_at.Value.ToString(ExportConstants.DateFormat)
                            : ExportConstants.EmptyValue,
                        finger.finger?.finger_id ?? ExportConstants.EmptyValue,
                        GetFingerTypeText(finger.finger?.type),
                        ExportConstants.EmptyValue,
                        ExportConstants.EmptyValue,
                        ExportConstants.EmptyValue,
                        ExportConstants.EmptyValue,
                        ExportConstants.EmptyValue
                    });
                }
                else
                {
                    foreach (var motor in orderedMotors)
                    {
                        rows.Add(new()
                        {
                            palm.palm?.palm_id ?? ExportConstants.EmptyValue,
                            palm.palm?.created_at.ToString(ExportConstants.DateFormat) ?? ExportConstants.EmptyValue,
                            finger.finger?.finger_id ?? ExportConstants.EmptyValue,
                            GetFingerTypeText(finger.finger?.type),
                            motor.motor?.updated_at?.ToString(ExportConstants.DateFormat) ?? ExportConstants.EmptyValue,
                            motor.motor?.motor_id ?? ExportConstants.EmptyValue,
                            motor.motor?.operator_id ?? ExportConstants.EmptyValue,
                            motor.motor?.created_at.ToString(ExportConstants.DateFormat) ?? ExportConstants.EmptyValue,
                            motor.motor?.is_qualified == true ? ExportConstants.Qualified : ExportConstants.Unqualified
                        });
                    }
                }

                int fingerRowEnd = rows.Count - 1;
                if (fingerRowEnd > fingerRowStart)
                {
                    AddMerge(merges, fingerRowStart, fingerRowEnd, 2); // 合并手指编号
                    AddMerge(merges, fingerRowStart, fingerRowEnd, 3); // 合并手指类型
                    AddMerge(merges, fingerRowStart, fingerRowEnd, 4); // 合并手指组装时间
                }
            }

            int palmRowEnd = rows.Count - 1;
            if (palmRowEnd > palmRowStart)
            {
                AddMerge(merges, palmRowStart, palmRowEnd, 0); // 合并手掌编号
                AddMerge(merges, palmRowStart, palmRowEnd, 1); // 合并手掌组装时间
            }
        }

        rows.Add(new());
        rows.Add(new());
    }

    // ================== 区块：检测结果 ==================
    private void BuildDetectionResults(List<List<object>> rows, List<object> styles)
    {
        rows.Add(new() { "检测结果汇总" });
        AddStyle(styles, rows.Count - 1, rows.Count - 1, 0, 0,
            h: "center", v: "middle", wrap: true, bold: true, bg: "#DDEBF7");

        var palmDetectRows = BuildPalmDetectionRows();
        var fingerD4Rows = BuildFingerD4Rows();
        var fingerD3Rows = BuildFingerD3Rows();
        var fingerD2Rows = BuildFingerD2Rows();
        var motorWormRows = BuildMotorWormRows();

        AddDetectionSection(rows, styles, "手掌检测", palmDetectRows,
            new[] { "手掌编号", "检测编号", "标定时间", "轮指100次", "接近觉", "法向力", "风扇功能", "软件版本", "电流", "检测员", "备注", "是否合格" });

        AddDetectionSection(rows, styles, "单指标定检测", fingerD4Rows,
            new[] { "手指编号", "检测编号", "标定时间", "测试动作", "近端角度", "远端角度", "耗时(s)", "电机1峰值", "电机2峰值", "手指电流", "接近觉", "法向力", "检测员", "备注", "是否合格" });

        AddDetectionSection(rows, styles, "分指标定检测", fingerD3Rows,
            new[] { "分指编号", "检测编号", "标定时间", "测试动作", "近端角度", "远端角度", "耗时(s)", "电机1峰值", "电机2峰值", "检测员", "备注", "是否合格" });

        AddDetectionSection(rows, styles, "分指蜗杆粘接检测", fingerD2Rows,
            new[] { "分指编号", "检测编号", "粘接时间", "使用时间", "检测员", "备注", "是否合格" });

        AddDetectionSection(rows, styles, "电机蜗杆粘接检测", motorWormRows,
            new[] { "电机编号", "检测编号", "粘接时间", "使用时间", "作用力", "检测前距离", "检测后距离", "距离差", "检测员", "备注", "是否合格" });
    }

    private void AddDetectionSection(List<List<object>> rows, List<object> styles,
        string sectionTitle, List<List<object>> dataRows, string[] headers)
    {
        if (dataRows.Count > 0)
        {
            rows.Add(new() { sectionTitle });
            AddStyle(styles, rows.Count - 1, rows.Count - 1, 0, 0,
                h: "center", v: "middle", wrap: true, bold: true, bg: "#DDEBF7");

            rows.Add(new List<object>(headers));
            AddStyle(styles, rows.Count - 1, rows.Count - 1, 0, headers.Length - 1,
                h: "center", v: "middle", wrap: true, bold: true, bg: "#E2EFDA");

            rows.AddRange(dataRows);
            rows.Add(new());
        }
    }

    // ================== 数据明细（保持你的原实现） ==================
    private List<List<object>> BuildPalmDetectionRows()
    {
        var rows = new List<List<object>>();

        foreach (var palm in fullTaskData.Where(p => p?.detects != null))
        {
            foreach (var d in palm.detects)
            {
                rows.Add(new()
                {
                    palm.palm?.palm_id ?? ExportConstants.EmptyValue,
                    d.id,
                    d.calibrate_time?.ToString(ExportConstants.DateFormat) ?? ExportConstants.EmptyValue,
                    d.hundred_times?.ToString() ?? ExportConstants.EmptyValue,
                    d.proximity_sensing?.ToString() ?? ExportConstants.EmptyValue,
                    d.normal_force?.ToString() ?? ExportConstants.EmptyValue,
                    d.fan_function?.ToString() ?? ExportConstants.EmptyValue,
                    d.software_version?.ToString() ?? ExportConstants.EmptyValue,
                    d.electricity?.ToString() ?? ExportConstants.EmptyValue,
                    d.inspector?.ToString() ?? ExportConstants.EmptyValue,
                    d.remarks?.ToString() ?? ExportConstants.EmptyValue,
                    d.if_qualified switch
                    {
                        true => ExportConstants.Qualified,
                        false => ExportConstants.Unqualified,
                        null => "未知"
                    }
                });
            }
        }

        return rows;
    }

    private List<List<object>> BuildFingerD4Rows()
    {
        var rows = new List<List<object>>();

        foreach (var palm in fullTaskData.Where(p => p?.fingers != null))
        {
            foreach (var finger in palm.fingers.Where(f => f?.detect4 != null))
            {
                foreach (var d in finger.detect4)
                {
                    rows.Add(new()
                    {
                        finger.finger?.finger_id ?? ExportConstants.EmptyValue,
                        d.id,
                        d.calibrate_time?.ToString(ExportConstants.DateFormat) ?? ExportConstants.EmptyValue,
                        d.test_action ?? ExportConstants.EmptyValue,
                        d.near_angle?.ToString() ?? ExportConstants.EmptyValue,
                        d.remote_angle?.ToString() ?? ExportConstants.EmptyValue,
                        d.consume_time?.ToString() ?? ExportConstants.EmptyValue,
                        d.motor_1_max?.ToString() ?? ExportConstants.EmptyValue,
                        d.motor_2_max?.ToString() ?? ExportConstants.EmptyValue,
                        d.electricity?.ToString() ?? ExportConstants.EmptyValue,
                        d.proximity_sensing?.ToString() ?? ExportConstants.EmptyValue,
                        d.normal_force?.ToString() ?? ExportConstants.EmptyValue,
                        d.inspector ?? ExportConstants.EmptyValue,
                        d.remarks ?? ExportConstants.EmptyValue,
                        d.if_qualified switch
                        {
                            true => ExportConstants.Qualified,
                            false => ExportConstants.Unqualified,
                            null => "未知"
                        }
                    });
                }
            }
        }

        return rows;
    }

    private List<List<object>> BuildFingerD3Rows()
    {
        var rows = new List<List<object>>();

        foreach (var palm in fullTaskData.Where(p => p?.fingers != null))
        {
            foreach (var finger in palm.fingers.Where(f => f?.detect3 != null))
            {
                foreach (var d in finger.detect3)
                {
                    rows.Add(new()
                    {
                        finger.finger?.finger_id ?? ExportConstants.EmptyValue,
                        d.id,
                        d.calibrate_time?.ToString(ExportConstants.DateFormat) ?? ExportConstants.EmptyValue,
                        d.test_action?.ToString() ?? ExportConstants.EmptyValue,
                        d.near_angle?.ToString() ?? ExportConstants.EmptyValue,
                        d.remote_angle?.ToString() ?? ExportConstants.EmptyValue,
                        d.consume_time?.ToString() ?? ExportConstants.EmptyValue,
                        d.motor_1_max?.ToString() ?? ExportConstants.EmptyValue,
                        d.motor_2_max?.ToString() ?? ExportConstants.EmptyValue,
                        d.inspector ?? ExportConstants.EmptyValue,
                        d.remarks ?? ExportConstants.EmptyValue,
                        d.if_qualified switch
                        {
                            true => ExportConstants.Qualified,
                            false => ExportConstants.Unqualified,
                            null => "未知"
                        }
                    });
                }
            }
        }

        return rows;
    }

    private List<List<object>> BuildFingerD2Rows()
    {
        var rows = new List<List<object>>();

        foreach (var palm in fullTaskData.Where(p => p?.fingers != null))
        {
            foreach (var finger in palm.fingers.Where(f => f?.detect2 != null))
            {
                foreach (var d in finger.detect2)
                {
                    rows.Add(new()
                    {
                        finger.finger?.finger_id ?? ExportConstants.EmptyValue,
                        d.id,
                        d.combine_time?.ToString(ExportConstants.DateFormat) ?? ExportConstants.EmptyValue,
                        d.using_time?.ToString(ExportConstants.DateFormat) ?? ExportConstants.EmptyValue,
                        d.inspector ?? ExportConstants.EmptyValue,
                        d.remarks ?? ExportConstants.EmptyValue,
                        d.if_qualified ? ExportConstants.Qualified : ExportConstants.Unqualified
                    });
                }
            }
        }

        return rows;
    }

    private List<List<object>> BuildMotorWormRows()
    {
        var rows = new List<List<object>>();

        foreach (var palm in fullTaskData.Where(p => p?.fingers != null))
        {
            foreach (var finger in palm.fingers.Where(f => f?.motors != null))
            {
                foreach (var motor in finger.motors.Where(m => m?.detects != null))
                {
                    foreach (var d in motor.detects)
                    {
                        rows.Add(new()
                        {
                            motor.motor?.motor_id ?? ExportConstants.EmptyValue,
                            d.id,
                            d.combine_time?.ToString(ExportConstants.DateFormat) ?? ExportConstants.EmptyValue,
                            d.using_time?.ToString(ExportConstants.DateFormat) ?? ExportConstants.EmptyValue,
                            d.force?.ToString() ?? ExportConstants.EmptyValue,
                            d.distance_before?.ToString() ?? ExportConstants.EmptyValue,
                            d.distance_after?.ToString() ?? ExportConstants.EmptyValue,
                            d.distance_result?.ToString() ?? ExportConstants.EmptyValue,
                            d.inspector_id ?? ExportConstants.EmptyValue,
                            d.remarks ?? ExportConstants.EmptyValue,
                            d.if_qualified ? ExportConstants.Qualified : ExportConstants.Unqualified
                        });
                    }
                }
            }
        }

        return rows;
    }

    // ================== 工具：合并与文本 ==================
    private string GetFingerTypeText(int? type)
    {
        return type switch
        {
            0 => "单指",
            1 => "拇指",
            2 => "分指",
            _ => "未知"
        };
    }

    private void AddMerge(List<object> merges, int startRow, int endRow, int col)
    {
        if (endRow <= startRow) return;

        merges.Add(new
        {
            s = new { r = startRow, c = col },
            e = new { r = endRow, c = col }
        });
    }

    // ================== 用 ClosedXML 生成字节 ==================
    private byte[] BuildXlsxBytes(List<List<object>> rows, List<object> merges, List<object> styles)
    {
        using var wb = new XLWorkbook();
        var ws = wb.AddWorksheet("任务报告");

        // 1) 写数据 + 默认样式（左 / 中 / 换行）
        int maxCols = 0;
        for (int r = 0; r < rows.Count; r++)
        {
            var row = rows[r] ?? new List<object>();
            maxCols = Math.Max(maxCols, row.Count);

            for (int c = 0; c < row.Count; c++)
            {
                var cell = ws.Cell(r + 1, c + 1);
                cell.Value = row[c]?.ToString() ?? string.Empty;
                cell.Style.Alignment.Horizontal = XLAlignmentHorizontalValues.Left;
                cell.Style.Alignment.Vertical = XLAlignmentVerticalValues.Center;
                cell.Style.Alignment.WrapText = true;
            }
        }

        // 2) 合并（0基 -> 1基）
        if (merges != null)
        {
            foreach (dynamic m in merges)
            {
                int rs = (int)m.s.r + 1;
                int cs = (int)m.s.c + 1;
                int re = (int)m.e.r + 1;
                int ce = (int)m.e.c + 1;
                if (re >= rs && ce >= cs)
                    ws.Range(rs, cs, re, ce).Merge();
            }
        }

        // 3) 标题整行合并（视觉一致）：凡是第一列是标题文本的行合并到 maxCols
        var titleSet = new HashSet<string>
        {
            "任务详情", "手掌-手指-电机 对应关系", "检测结果汇总",
            "手掌检测", "分指标定检测", "分指蜗杆粘接检测",
            "单指标定检测", "电机蜗杆粘接检测"
        };
        for (int r = 0; r < rows.Count; r++)
        {
            var first = rows[r].Count > 0 ? rows[r][0]?.ToString() ?? "" : "";
            if (titleSet.Contains(first) && maxCols > 0)
            {
                ws.Range(r + 1, 1, r + 1, maxCols).Merge();
            }
        }

        // 4) 覆写样式（styles）
        if (styles != null)
        {
            foreach (dynamic st in styles)
            {
                int rs = (int)st.rs + 1;
                int re = (int)st.re + 1;
                int cs = (int)st.cs + 1;
                int ce = (int)st.ce + 1;

                string h = (string)(st.h ?? "left");
                string v = (string)(st.v ?? "middle");
                bool wrap = st.wrap is bool b1 ? b1 : true;
                bool? bold = st.bold is bool b2 ? b2 : (bool?)null;
                string? bg = st.bg is string s1 ? s1 : null;
                string? border = st.border is string s2 ? s2 : null;

                for (int r = rs; r <= re; r++)
                {
                    for (int c = cs; c <= ce; c++)
                    {
                        var cell = ws.Cell(r, c);
                        cell.Style.Alignment.Horizontal = MapH(h);
                        cell.Style.Alignment.Vertical = MapV(v);
                        cell.Style.Alignment.WrapText = wrap;

                        if (bold.HasValue)
                            cell.Style.Font.Bold = bold.Value;

                        if (!string.IsNullOrWhiteSpace(bg))
                            cell.Style.Fill.BackgroundColor = XLColor.FromHtml(bg);

                        if (!string.IsNullOrWhiteSpace(border))
                        {
                            var bstyle = MapBorder(border);
                            cell.Style.Border.OutsideBorder = bstyle;
                            cell.Style.Border.InsideBorder = bstyle;
                        }
                    }
                }
            }
        }

        // 5) 自动列宽 + 限制
        ws.Columns().AdjustToContents();
        for (int c = 1; c <= Math.Max(1, maxCols); c++)
        {
            var col = ws.Column(c);
            if (col.Width < 10) col.Width = 10;
            if (col.Width > 50) col.Width = 50;
        }

        using var ms = new MemoryStream();
        wb.SaveAs(ms);
        return ms.ToArray();
    }

    // ================== 小工具：样式映射 ==================
    private static XLAlignmentHorizontalValues MapH(string h) => h?.ToLowerInvariant() switch
    {
        "center" => XLAlignmentHorizontalValues.Center,
        "right" => XLAlignmentHorizontalValues.Right,
        "justify" => XLAlignmentHorizontalValues.Justify,
        _ => XLAlignmentHorizontalValues.Left
    };

    private static XLAlignmentVerticalValues MapV(string v) => v?.ToLowerInvariant() switch
    {
        "top" => XLAlignmentVerticalValues.Top,
        "bottom" => XLAlignmentVerticalValues.Bottom,
        _ => XLAlignmentVerticalValues.Center
    };

    private static XLBorderStyleValues MapBorder(string b) => b?.ToLowerInvariant() switch
    {
        "thin" => XLBorderStyleValues.Thin,
        "medium" => XLBorderStyleValues.Medium,
        "thick" => XLBorderStyleValues.Thick,
        _ => XLBorderStyleValues.Thin
    };

}
